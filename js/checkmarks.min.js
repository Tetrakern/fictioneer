var fcn_checkmarks,fcn_userCheckmarksTimeout;function fcn_initializeCheckmarks(a){const c=a.detail.data.checkmarks;!1!==c&&(Array.isArray(c.data)&&0===c.data.length&&(c.data={}),fcn_checkmarks=c,fcn_updateCheckmarksView(),localStorage.removeItem("fcnBookshelfContent"),_$$("button.checkmark").forEach((a=>{a.addEventListener("click",(a=>{fcn_clickCheckmark(a.currentTarget)}))})))}function fcn_toggleCheckmark(a,c,e=null,t=null,s="toggle"){const r=fcn().userData();if(fcn_checkmarks&&r.checkmarks){if(localStorage.removeItem("fcnBookshelfContent"),"toggle"===s&&JSON.stringify(fcn_checkmarks.data[a])!==JSON.stringify(r.checkmarks.data[a]))return fcn_checkmarks=r.checkmarks,fcn_showNotification(fictioneer_tl.notification.checkmarksResynchronized),void fcn_updateCheckmarksView();if(fcn_checkmarks.data[a]||(fcn_checkmarks.data[a]=[]),r.checkmarks.data[a]||(r.checkmarks.data[a]=[]),e&&"progress"===c&&!fcn_checkmarks.data[a].includes(e)&&fcn_checkmarks.data[a].push(e),e&&"chapter"===c)if(!fcn_checkmarks.data[a].includes(e)&&"unset"!==s||"set"===s)fcn_checkmarks.data[a].push(e),t&&(t.classList.add("marked"),t.setAttribute("aria-checked",!0));else{fcn_removeItemOnce(fcn_checkmarks.data[a],e),t&&(t.classList.remove("marked"),t.setAttribute("aria-checked",!1)),fcn_removeItemOnce(fcn_checkmarks.data[a],a);const c=_$('button[data-type="story"]');c&&(c.classList.remove("marked"),c.setAttribute("aria-checked",!1))}if("story"===c){const c=(fcn_checkmarks.data[a].includes(a)||"unset"===s)&&"set"!==s;fcn_checkmarks.data[a]=[],c||(_$$("button.checkmark").forEach((c=>{fcn_checkmarks.data[a].push(parseInt(c.dataset.id))})),fcn_checkmarks.data[a].includes(a)||fcn_checkmarks.data[a].push(a))}fcn_checkmarks.data[a]=fcn_checkmarks.data[a].filter(((a,c,e)=>e.indexOf(a)==c)),r.checkmarks.data[a]=fcn_checkmarks.data[a],r.lastLoaded=0,fcn().setUserData(r),fcn_updateCheckmarksView(),clearTimeout(fcn_userCheckmarksTimeout),fcn_userCheckmarksTimeout=setTimeout((()=>{fcn_updateCheckmarks(a,fcn_checkmarks.data[a])}),FcnGlobals.debounceRate)}}function fcn_clickCheckmark(a){fcn_toggleCheckmark(parseInt(a.dataset.storyId),a.dataset.type,parseInt(a.dataset.id),a)}function fcn_updateCheckmarks(a,c=null){c=c||fcn().userData().checkmarks.data[a],fcn_ajaxPost({action:"fictioneer_ajax_set_checkmark",fcn_fast_ajax:1,story_id:a,update:c.join(" ")}).then((a=>{a.success||(fcn_showNotification(a.data.failure??a.data.error??fictioneer_tl.notification.error,3,"warning"),(a.data.error||a.data.failure)&&console.error("Error:",a.data.error??a.data.failure))})).catch((a=>{a.status&&a.statusText&&fcn_showNotification(`${a.status}: ${a.statusText}`,5,"warning"),console.error(a)}))}function fcn_updateCheckmarksView(){const a=fcn().userData(),c=a.checkmarks;if(!c)return;const e=parseInt(document.body.dataset.storyId);if(e){const t=c.data[e]&&c.data[e].includes(e);if(t){let t=!1;_$$("button.checkmark").forEach((a=>{const s=parseInt(a.dataset.id);c.data[e].includes(s)||(c.data[e].push(s),t=!0)})),t&&(a.checkmarks=c,fcn().setUserData(a),fcn_updateCheckmarks(e,c.data[e]))}_$$$("ribbon-read")?.classList.toggle("hidden",!t)}_$$("button.checkmark").forEach((a=>{const e=parseInt(a.dataset.storyId);if(c.data[e]){const t=c.data[e].includes(parseInt(a.dataset.id));a.classList.toggle("marked",t),a.setAttribute("aria-checked",t)}}))}document.addEventListener("fcnUserDataReady",(a=>{fcn_initializeCheckmarks(a)}));