function fcn_toggleCheckmark(t,e=null,a=null){const r=window.FictioneerApp.Controllers.fictioneerCheckmarks;if(!r)return void fcn_showNotification("Error: Checkmarks Controller not connected.",3,"warning");const s=FcnUtils.userData();let i="story";if((t=parseInt(t??0))<1)return void fcn_showNotification("Error: Invalid story ID.",3,"warning");if(null!==e){if((e=parseInt(e))<1)return void fcn_showNotification("Error: Invalid chapter ID.",3,"warning");i="chapter"}s.checkmarks.data[t]||(s.checkmarks.data[t]=[]),null===a&&(a="chapter"===i?!s.checkmarks.data[t]?.includes(e):!s.checkmarks.data[t]?.includes(t));const c="chapter"===i?e:t;a?s.checkmarks.data[t].push(c):(FcnUtils.removeArrayItemOnce(s.checkmarks.data[t],c),"chapter"===i&&FcnUtils.removeArrayItemOnce(s.checkmarks.data[t],t)),s.checkmarks.data[t]=s.checkmarks.data[t].filter(((t,e,a)=>a.indexOf(t)==e)),s.lastLoaded=0,FcnUtils.setUserData(s),r.refreshView(),clearTimeout(r.timeout),r.timeout=setTimeout((()=>{FcnUtils.aPost({action:"fictioneer_ajax_set_checkmark",fcn_fast_ajax:1,story_id:t,update:s.checkmarks.data[t].join(" ")}).then((t=>{t.success||(fcn_showNotification(t.data.failure??t.data.error??fictioneer_tl.notification.error,3,"warning"),(t.data.error||t.data.failure)&&console.error("Error:",t.data.error??t.data.failure))})).catch((t=>{t.status&&t.statusText&&fcn_showNotification(`${t.status}: ${t.statusText}`,5,"warning"),console.error(t)}))}),FcnGlobals.debounceRate)}application.register("fictioneer-checkmarks",class extends Stimulus.Controller{static get targets(){return["chapterCheck","storyCheck","ribbon"]}timeout=0;initialize(){fcn()?.userReady?this.#t=!0:document.addEventListener("fcnUserDataReady",(()=>{this.refreshView(),this.#t=!0,this.#e()}))}connect(){window.FictioneerApp.Controllers.fictioneerCheckmarks=this,this.#t&&(this.refreshView(),this.#e())}data(){return this.checkmarksCachedData=FcnUtils.userData().checkmarks?.data,Array.isArray(this.checkmarksCachedData)&&0===this.checkmarksCachedData.length&&(this.checkmarksCachedData={}),this.checkmarksCachedData}toggleChapter({params:{chapter:t,story:e}}){fcn_toggleCheckmark(e,t)}toggleStory({params:{story:t}}){fcn_toggleCheckmark(t)}refreshView(){const t=this.data();Object.keys(t).length<1?this.uncheckAll():Object.entries(t).forEach((([t,e])=>{t=parseInt(t);const a=e?.includes(t);this.hasChapterCheckTarget&&(a?this.chapterCheckTargets.forEach((t=>{t.classList.toggle("marked",!0),t.setAttribute("aria-checked",!0)})):this.chapterCheckTargets.forEach((a=>{const r=parseInt(a.dataset.fictioneerCheckmarksChapterParam);if(parseInt(a.dataset.fictioneerCheckmarksStoryParam)===t){const t=e?.includes(r);a.classList.toggle("marked",t),a.setAttribute("aria-checked",t)}}))),this.hasStoryCheckTarget&&(this.storyCheckTarget.classList.toggle("marked",a),this.storyCheckTarget.setAttribute("aria-checked",a)),this.hasRibbonTarget&&this.ribbonTarget.classList.toggle("hidden",!a)}))}uncheckAll(){this.hasChapterCheckTarget&&this.chapterCheckTargets.forEach((t=>{t.classList.toggle("marked",!1),t.setAttribute("aria-checked",!1)})),this.hasStoryCheckTarget&&(this.storyCheckTarget.classList.toggle("marked",!1),this.storyCheckTarget.setAttribute("aria-checked",!1))}#t=!1;#a=!1;#r(){const t=FcnUtils.loggedIn();return t||(this.#s(),this.#a=!0),t}#i(){return this.#r()&&JSON.stringify(this.checkmarksCachedData??0)!==JSON.stringify(this.data())}#c(){this.refreshInterval||(this.refreshInterval=setInterval((()=>{!this.#a&&this.#i()&&this.refreshView()}),3e4+1e3*Math.random()))}#e(){this.#c(),this.visibilityStateCheck=()=>{this.#r()&&("visible"===document.visibilityState?(this.#a=!1,this.refreshView(),this.#c()):(this.#a=!0,clearInterval(this.refreshInterval),this.refreshInterval=null))},document.addEventListener("visibilitychange",this.visibilityStateCheck)}#s(){clearInterval(this.refreshInterval),document.removeEventListener("visibilitychange",this.visibilityStateCheck)}});