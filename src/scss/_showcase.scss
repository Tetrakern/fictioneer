@use 'common/_functions' as *;
@use 'common/_mixins' as *;
@use 'common/_variables' as *;

.showcase {
  &:not(:first-child) {
    margin-top: 2rem;
  }

  &:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__image {
    position: absolute;
    inset: 0;
    object-fit: cover;
    object-position: center;
    height: 100%;
    width: 100%;
    transition: transform var(--transition-duration);

    &._no-cover {
      background: var(--showcase-cover-placeholder, var(--placeholder-background));
    }
  }

  &__list:where(:not(.splide__list)) {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--showcase-item-min-width, #{get_clamp(160, 175, 375, 480)})), 1fr));
    gap: var(--showcase-row-gap, max(3cqw, 1.5rem)) var(--showcase-row-col, max(3cqw, 1.5rem));

    // Fallback
    @supports not (width: 1cqw) {
      gap: var(--showcase-row-gap, 1.5rem) var(--showcase-row-col, 1.5rem);
    }
  }

  &__list-item {
    position: relative;
    aspect-ratio: var(--showcase-item-aspect-ratio);
    border-radius: var(--layout-border-radius-small);
    box-shadow: var(--showcase-box-shadow, var(--box-shadow-m));
    overflow: hidden;
    height: fit-content; // Fix for Safari
    max-width: max(420px, 100%);
    contain: layout paint style; // Improve performance

    // Backgrounds cause an edge bleed due to anti-aliasing,
    // so we need to get creative with the placeholder.
    &::before {
      content: '';
      position: absolute;
      inset: .5px;
      z-index: -1;
      display: block;
      background: var(--showcase-cover-placeholder, var(--placeholder-background));
      border-radius: var(--layout-border-radius-small);
    }

    &:where(:not(._aspect-ratio)) {
      height: var(--showcase-item-height, max(64px, #{get_clamp(64, 96, 375, 768)}));
    }

    @include bp(mobile-l) {
      &:first-child:last-child {
        width: max(360px, 50%);
        margin: 0 auto;
      }
    }
  }

  &__list-item-link {
    display: block;
    height: 100%;

    &:hover {
      img {
        transform: scale(1.05);
      }
    }
  }

  &__list-item-figcaption {
    position: absolute;
    inset: 0;
    top: unset;
    display: block;
    background: var(--caption-overlay-background);
    color: var(--caption-overlay-color);
    font: 400 var(--fs-dxs)/1.2 var(--ff-heading);
    letter-spacing: 0;
    text-align: center;
    white-space: nowrap;
    padding: var(--caption-padding);
    overflow: hidden;
    text-overflow: ellipsis;
  }
}
