@use 'common/_functions' as *;
@use 'common/_mixins' as *;
@use 'common/_variables' as *;

.has-sidebar {
  --layout-spacing-horizontal: #{get_clamp(20, 48, 480, $full-width)};
  --layout-spacing-horizontal-small: #{get_clamp(10, 20, 320, 400)};

  &.has-sidebar-left {
    .main__wrapper {
      order: 1;

      @include bp(desktop) {
        order: 2;
        padding-left: 0;
      }

      .padding-left {
        @include bp(desktop) {
          padding-left: 0;
        }
      }
    }
  }

  &.has-sidebar-right {
    .main {
      @include bp(desktop) {
        // minmax(min(100%, 300px), 1fr) prevents overflow issues
        grid-template-columns: minmax(min(100%, 300px), 1fr) calc(var(--sidebar-width) + var(--layout-spacing-horizontal));
        grid-template-areas: 'content sidebar';
      }
    }

    .main__wrapper {
      @include bp(desktop) {
        padding-right: 0;
      }

      .padding-right {
        @include bp(desktop) {
          padding-right: 0;
        }
      }
    }

    .fictioneer-sidebar._layout {
      .fictioneer-sidebar__wrapper {
        @include bp(desktop) {
          padding: var(--layout-spacing-vertical) var(--layout-spacing-horizontal) var(--layout-spacing-vertical) 0;
        }
      }
    }
  }

  .fictioneer-sidebar__wrapper._layout {
    padding: var(--layout-spacing-vertical) var(--layout-spacing-horizontal-small);
    min-width: calc(var(--sidebar-width) + var(--layout-spacing-horizontal-small));
    container-type: inline-size;

    @include bp(400px) {
      padding: var(--layout-spacing-vertical) var(--layout-spacing-horizontal);
      min-width: calc(var(--sidebar-width) + var(--layout-spacing-horizontal));
    }

    @include bp(desktop) {
      padding: var(--layout-spacing-vertical) 0 var(--layout-spacing-vertical) var(--layout-spacing-horizontal);
    }
  }

  .main {
    display: flex;
    flex-direction: column;
    gap: var(--sidebar-gap, 3rem);

    @include bp(desktop) {
      display: grid;
      // minmax(min(100%, 300px), 1fr) prevents overflow issues
      grid-template-columns: calc(var(--sidebar-width) + var(--layout-spacing-horizontal)) minmax(min(100%, 300px), 1fr);
      grid-template-areas: 'sidebar content';
      min-width: calc(494px + var(--sidebar-width));
    }

    &__wrapper {
      grid-area: content;
      flex: 1 1 auto;
      order: 1;
    }
  }

  .current-reading::after,
  .selected-paragraph::after {
    border-radius: var(--layout-border-radius-small);

    @include bp(desktop) {
      max-width: calc(100% + var(--layout-spacing-horizontal));
    }
  }

  .current-bookmark::before {
    @include bp(desktop) {
      max-width: calc(100% + var(--layout-spacing-horizontal));
    }
  }
}

.fictioneer-sidebar,
.elementor-widget-sidebar {
  --grid-columns-row-gap-multiplier: 0.75;
  --grid-columns-col-gap-multiplier: 0.75;
  position: relative;
  z-index: 1;
  flex: 1 1 100%;
}

.fictioneer-sidebar._layout {
  grid-area: sidebar;
  order: 2;
  font-size: clamp(13.5px, 3.125cqw, 15px);

  @include bp(desktop) {
    padding-top: var(--page-inset-top, 0px);
  }

  &::before {
    content: '';
    display: block;
    margin: var(--sidebar-mobile-divider-margin);
    border-top: var(--sidebar-mobile-divider);

    @include bp(desktop) {
      content: none;
    }
  }

  &._hide-on-mobile {
    @media screen and (max-width: 1023.9px) {
      display: none;
      content-visibility: hidden;
    }
  }
}

.widget {
  font-size: var(--fs-widget);

  &:not(:last-child) {
    > [class*="wp-block-"],
    &.widget_meta {
      --this-spacing: 0;
      margin-block-end: var(--layout-widget-spacing, 1.75rem);
    }

    > .wp-block-heading,
    .widgettitle {
      margin-block-end: calc(var(--layout-widget-spacing, 1.75rem) * var(--layout-widget-spacing-heading-multiplier, 0.5));
    }

    > .wp-block-separator {
      margin-bottom: calc(var(--hr-spacing) * 0.75);
    }
  }

  .wp-block-separator {
    margin-top: calc(var(--hr-spacing) * 0.75);
    margin-bottom: calc(var(--hr-spacing) * 0.75);
  }

  :where(.wp-block-heading, .widgettitle) {
    &:is(h1) {
      font-size: 1.6em;
    }

    &:is(h2) {
      font-size: 1.5em;
    }

    &:is(h3) {
      font-size: 1.4em;
    }

    &:is(h4) {
      font-size: 1.3em;
    }

    &:is(h5) {
      font-size: 1.2em;
    }

    &:is(h6) {
      font-size: 1.1em;
    }
  }

  :is(.wp-block-list, .wp-block-archives-list, .wp-block-categories-list) {
    --list-item-spacing: var(--widget-list-item-spacing, 0.25em);
    padding-left: 1.05em;
  }

  a:where(:not(.button, .wp-element-button)) {
    color: var(--widget-link-color);

    &:hover {
      color: var(--widget-link-color-hover);
    }
  }

  p {
    margin-block-end: var(--layout-widget-spacing, 1.75rem);
  }
}
