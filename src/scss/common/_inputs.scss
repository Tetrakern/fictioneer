@use '_functions' as *;
@use '_mixins' as *;
@use '_variables' as *;

:where(input, textarea, button, select) {
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  color: inherit;
  font-family: var(--ff-input);
  font-size: inherit;
  font-weight: var(--font-weight-normal);
  line-height: inherit;
  text-align: left;
  border-style: solid;
}

select {
  cursor: pointer;

  option {
    color: black;
  }
}

.select-wrapper {
  position: relative;
  width: 100%;

  &::after {
    content: '';
    pointer-events: none;
    position: absolute;
    top: 53%;
    right: 4px;
    display: block;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='black' d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z'/%3E%3C/svg%3E") no-repeat center/contain;
    transform: translateY(-50%);
    height: 14px;
    width: 14px;
    opacity: .4;
    filter: invert(1);
  }

  select {
    font-size: var(--fs-xs);
    line-height: 30px;
    padding: 0 22px 0 8px;
    height: 32px;
    width: 100%;
  }
}

:root[data-mode=light] {
  .select-wrapper {
    &::after {
      filter: invert(0);
    }
  }
}

input:is([type=text], [type=number], [type=password], [type=email], [type=url], [type=search]) {
  padding: 0 8px;
  height: 32px;
}

[type=search]::-webkit-search-cancel-button {
  display: none;
}

input:is([type=text], [type=number], [type=range], [type=password], [type=email], [type=url], [type=search]),
textarea,
select {
  font-size: var(--fs-xs);
  background: var(--input-background);
  color: var(--input-color);
  border: none;
  border-radius: var(--input-border-radius, var(--layout-border-radius-small));
  box-shadow: var(--input-shadow, 0 0 transparent), var(--input-validation-shadow, 0 0 transparent);

  // Only iOS
  @supports (-webkit-touch-callout: none) {
    font-size: 16px; // Prevent zoom-in
  }

  &:is([disabled], ._disabled) {
    cursor: not-allowed;
    pointer-events: none;
    background: var(--input-background-disabled);
    color: var(--input-color-disabled);
  }

  &::placeholder {
    color: var(--input-placeholder-color);
    font-family: var(--ff-input);
    font-size: 13px;
    font-weight: var(--font-weight-normal);
    text-shadow: none;
  }
}

input[type=range] {
  cursor: pointer;
  padding: 5px;
  margin: 0;
  height: 24px;

  &::-webkit-slider-thumb {
    cursor: pointer;
    -webkit-appearance: none;
    background: var(--input-range-thumb);
    border-radius: var(--input-border-radius, var(--layout-border-radius-small));
    width: 18px;
    height: 18px;
    transition: background-color var(--transition-duration);

    @include bp(desktop) {
      width: 14px;
      height: 14px;
    }

    &:hover {
      background: var(--input-range-thumb-hover);
    }
  }

  &::-moz-range-thumb {
    cursor: pointer;
    background: var(--input-range-thumb);
    border: none;
    border-radius: var(--input-border-radius, var(--layout-border-radius-small));
    width: 14px;
    height: 14px;
    transition: background-color var(--transition-duration);

    &:hover {
      background: var(--input-range-thumb-hover);
    }
  }
}

input[type=number] {
  -moz-appearance: textfield;

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

input[type=checkbox],
input[type=radio] {
  cursor: pointer;
  position: relative;
  background: var(--input-background);
  flex-shrink: 0;
  line-height: 1;
  border: 1px solid transparent;
  border-radius: min(5px, var(--input-border-radius, var(--layout-border-radius-small)));
  margin: 0;
  height: 16px;
  width: 16px;

  &::after {
    position: absolute;
    display: block;
  }
}

input[type=checkbox] {
  &:checked {
    background: var(--input-fill);

    &::after {
      content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' preserveAspectRatio='xMidYMid meet' viewBox='0 0 27 27' style='margin: 1px 0 0 1px' %3E%3Cpath fill='black' d='m9 19.414l-6.707-6.707l1.414-1.414L9 16.586L20.293 5.293l1.414 1.414z'%3E%3C/path%3E%3C/svg%3E"); // https://icon-sets.iconify.design/?query=checkmark
      inset: 0;
      filter: var(--invert-filter); // Black -> White
    }
  }
}

input[type=radio] {
  border-radius: 50%;

  &:checked {
    &::after {
      content: '';
      inset: 3px;
      background: var(--input-fill);
      border-radius: 50%;
    }
  }
}

.narrow-inputs {
  :is([type=text], [type=number], [type=range], .select-wrapper select) {
    font-size: 13px;
    line-height: 26px;
    height: 26px;
  }
}

.checkbox-label,
.radio-label {
  display: flex;
  align-items: center;
  gap: 8px;
  color: var(--fg-600);
  font-size: 13px;
  line-height: 1.3;
  padding: 1px;
  height: 32px;
}

.keyword-input {
  position: relative;
  flex: 1 0 100%;

  &._empty {
    .keyword-input__track::before {
      content: attr(data-hint);
      position: absolute;
      color: var(--input-placeholder-color);
      font-size: 12px;
      line-height: 1;
      padding: 4px 0 4px 0;
    }
  }

  &__operator {
    --this-border-radius: var(--input-border-radius, var(--layout-border-radius-small));
    position: absolute;
    top: 0;
    right: 0;
    display: grid;
    place-content: center;
    background: var(--input-background);
    color: var(--fg-800);
    font-family: var(--ff-input);
    font-size: 11px;
    font-weight: 400;
    line-height: 1;
    padding: 4px 6px;
    border-radius: var(--this-border-radius) var(--this-border-radius) 0 0;
    width: 40px;
    transform: translateY(-100%);

    &:hover {
      color: var(--fg-400);
    }

    .on {
      display: none;
    }

    &[aria-checked="true"] {
      .on {
        display: block;
      }

      .off {
        display: none;
      }
    }
  }

  &__track {
    position: relative;
    cursor: text;
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 8px;
    background: var(--input-background);
    border-radius: var(--input-border-radius, var(--layout-border-radius-small));
    padding: 6px 8px;
    width: 100%;

    &._operator {
      border-top-right-radius: 0;
    }
  }

  .node {
    position: relative;
    background: var(--input-token-background);
    color: var(--input-token-color);
    font-size: 12px;
    line-height: 1;
    text-shadow: none;
    white-space: nowrap;
    text-transform: capitalize;
    border-radius: var(--input-border-radius, var(--layout-border-radius-small));
    padding: 0 20px 0 6px;
    width: fit-content;
    overflow: hidden;

    &-name {
      display: block;
      text-overflow: ellipsis;
      padding: 4px 0;
      overflow: hidden;
    }

    &-delete {
      cursor: pointer;
      position: absolute;
      top: 50%;
      right: 0;
      color: currentColor;
      line-height: 1;
      padding: 3px 6px 3px 14px;
      transform: translateY(-50%);
      transition: opacity var(--transition-duration);

      &:not(:hover) {
        opacity: .5;
      }
    }
  }

  &__input-wrapper {
    display: grid;
    grid-template-areas: "a";
    place-content: flex-start center;
    width: fit-content;
    max-width: 100%;
    overflow: hidden;
  }

  &__input:is([type=text]) {
    grid-area: a;
    background: transparent;
    font-size: 13px;
    line-height: 20px;
    letter-spacing: 0;
    text-transform: lowercase;
    padding: 0;
    height: 20px;
    min-width: 16px;
  }

  &__tab-suggestion {
    pointer-events: none;
    grid-area: a;
    color: var(--fg-950);
    font-size: 13px;
    line-height: 20px;
    letter-spacing: 0;
    white-space: nowrap;
  }

  &__hints,
  &__no-suggestions,
  &__suggestion-list {
    color: var(--fg-700);
    font-size: 11px;
    line-height: 2;
    margin: 4px 0 0 2px;
  }

  &__suggestion {
    color: var(--fg-700);
    font-size: 11px;
    line-height: 2;
    margin-right: 12px;
    transition: color var(--transition-duration);

    &:is(button):hover {
      color: var(--fg-400);
    }
  }
}
