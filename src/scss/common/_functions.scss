@use 'sass:math';
@use 'sass:string';
@use '_mixins' as *;
@use '_variables' as *;

@function get_clamp($min, $max, $wmin, $wmax, $unit: 'vw') {
  $vw: math.div($min - $max, math.div($wmin, 100) - math.div($wmax, 100));
  $offset: $min - $vw * math.div($wmin, 100);
  $operator: '';

  @if $offset > 0 {
    $operator: '+';
  } @else {
    $operator: '-';
    $offset: $offset * -1;
  }

  @return clamp(#{$min}px, #{$vw + $unit} #{$operator} #{$offset}px, #{$max}px);
}

@function get_relative_clamp($min, $max, $wmin, $wmax, $unit: 'vw', $rel: 'rem') {
  $tmin: $min * 16;
  $tmax: $max * 16;
  $operator: '';

  $vw: math.div($tmin - $tmax, math.div($wmin, 100) - math.div($wmax, 100));
  $offset: $tmin - $vw * math.div($wmin, 100);

  @if $offset > 0 {
    $operator: '+';
  } @else {
    $operator: '-';
    $offset: $offset * -1;
  }

  @return clamp(#{$min + $rel}, #{$vw + $unit} #{$operator} #{$offset}px, #{$max + $rel});
}

@function hsl_code($deg, $s, $l, $a: false) {
  @if $a != false {
    @return "hsl(calc(#{$deg}deg + var(--hue-rotate)) calc(#{$s}% * var(--saturation)) clamp(#{$l * 0.5}%, #{$l}% * var(--darken), #{$l + math.div(100 - $l, 2)}%) / #{$a})";
  }

  @return "hsl(calc(#{$deg}deg + var(--hue-rotate)) calc(#{$s}% * var(--saturation)) clamp(#{$l * 0.5}%, #{$l}% * var(--darken), #{$l + math.div(100 - $l, 2)}%))";
}

@function hsl_code_free($deg, $s, $l) {
  @return "calc(#{$deg}deg + var(--hue-rotate)) calc(#{$s}% * var(--saturation)) clamp(#{$l * 0.5}%, #{$l}% * var(--darken), #{$l + math.div(100 - $l, 2)}%)";
}

@function hsl_font_code($deg, $s, $l) {
  @return "hsl(calc(#{$deg}deg + var(--hue-rotate)) max(calc(#{$s}% * (var(--font-saturation) + var(--saturation) - 1)), 0%) clamp(0%, calc(#{$l}% * var(--font-lightness, 1)), 100%))";
}

@function unicode($str) {
  @return string.unquote("\"")+string.unquote(string.insert($str, "\\", 1))+string.unquote("\"");
}

// https://toward.studio/latest/making-css-gradients-smooth
// https://css-tricks.com/easing-linear-gradients/

@function scrim_gradient($startColor: #000000, $direction: 'to bottom', $startOpacity: 1, $offset: 0) {
  $scrimCoordinates: (
    0: 1,
    19: 0.738,
    34: 0.541,
    47: 0.382,
    56.5: 0.278,
    65: 0.194,
    73: 0.126,
    80.2: 0.075,
    86.1: 0.042,
    91: 0.021,
    95.2: 0.008,
    98.2: 0.002,
    100: 0
  );

  $hue: hue($startColor);
  $saturation: saturation($startColor);
  $lightness: lightness($startColor);
  $stops: ();

  @each $colorStop, $alphaValue in $scrimCoordinates {
    $adjustedAlpha: $alphaValue * $startOpacity;
    $adjustedStop: percentage(($colorStop * 0.01 * (100 - $offset) + $offset) * 0.01);
    $stop: hsla($hue, $saturation, $lightness, $adjustedAlpha) $adjustedStop;
    $stops: append($stops, $stop, comma);
  }

  @return linear-gradient(string.unquote($direction), $stops);
}
