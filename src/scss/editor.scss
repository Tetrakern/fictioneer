@use 'common/_functions' as *;
@use 'common/_mixins' as *;
@use 'common/_variables' as *;
@use 'admin/_editor-properties' as *;
@use 'common/_blocks' as *;

// Automatically becomes .editor-styles-wrapper
body {
  padding: 0 var(--layout-spacing-horizontal-small);
  margin: 0 auto;
  max-width: var(--wp--style--global--content-size);

  @include bp(400px) {
    padding: 0 var(--layout-spacing-horizontal);
  }

  *,
  ::before,
  ::after {
    box-sizing: border-box;
  }

  .hidden {
    display: inherit !important;
    border: 1px dotted #999;
  }

  .full-width {
    flex-basis: 100% !important;
    width: 100% !important;

    > * {
      width: 100% !important;
    }
  }

  .no-wrap {
    white-space: nowrap;
  }

  :is(.sensitive-content, .sensitive-alternative) {
    position: relative;

    &::before {
      pointer-events: none;
      content: '';
      position: absolute;
      inset: -2px 0 -2px 0;
      display: block;
      border-radius: 2px;
      opacity: .3;
    }
  }

  .sensitive-content {
    &::before {
      background: #eb5247;
    }
  }

  .sensitive-alternative {
    &::before {
      background: #77BFA3;
    }
  }

  .spoiler {
    cursor: initial;
  }

  :is(.wp-block-quote, .wp-block-pullquote):not(.alignleft, .alignright) {
    max-width: min(var(--wp--style--global--content-size) - 15%, max(85%, 260px)) !important;
  }

  .wp-block-post-content.is-root-container {
    container-type: inline-size;
  }

  .wp-block-search {
    &__input {
      font-size: var(--fs-xs);
      background: var(--input-background);
      color: var(--input-color);
      padding: 0 8px;
      border: none;
      border-radius: var(--input-border-radius, var(--layout-border-radius-small));
      height: 32px;
      box-shadow: var(--input-shadow, 0 0 transparent), var(--input-validation-shadow, 0 0 transparent);
    }
  }

  .wp-block-embed {
    max-width: 500px !important;
  }
}
